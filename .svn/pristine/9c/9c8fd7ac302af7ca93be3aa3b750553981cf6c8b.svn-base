package com.web.action.produce;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import net.sf.json.JSONArray;

import com.mybatis.entity.ttdj.ProduceInfo;
import com.mybatis.entity.ttdj.UserInfo;
import com.service.produce.ProduceServiceImpl;
import com.web.action.base.BaseAction;
import com.web.action.base.JsonUtil;
import common.CommonUtil;

public class ProduceAction extends BaseAction {

    private File file;  
    private String fileFileContentType;  
    private String fileFileName;  
	private static final long serialVersionUID = 1L;
	CommonUtil commonUtil = new CommonUtil();

	/**
	 * 上传商品图片	
	 * @throws Exception
	 */
	public void uploadImage() throws Exception {
		response.setContentType("text/html");
		response.setCharacterEncoding("UTF-8");
		String realDir = request.getSession().getServletContext()
				.getRealPath("");
		String contextpath = request.getContextPath();
		String userName =  commonUtil.decodeUrl(request.getParameter("userName"));
		String basePath = request.getScheme() + "://" + request.getServerName()
				+ ":" + request.getServerPort() + contextpath + "/";

			String filePath = "uploadfiles";
			String realPath = realDir + "\\" + filePath+"\\"+userName;
			// 判断路径是否存在，不存在则创建
			File dir = new File(realPath);
			if (!dir.isDirectory())
				dir.mkdir();

			String message = "";  
			String newFileName = "";
	        //这里的返回类型设置是重点。否则会报错，必须设置成text/html;如果设置成application/json  IE下会有问题，chrome没问题的。  
	        if(fileFileName.endsWith(".exe")){  
	            message = "不允许上传此类文件！";  
	        }else if(!file.exists()){  
	            message = "此文件不存在！";  
	        }else{  
	            FileInputStream fis = new FileInputStream(file);  
	            String datetime = ""+new Date().getTime();
	            newFileName = datetime+"."+fileFileName.split("\\.")[1];
	            FileOutputStream fos = new FileOutputStream(new File(dir+"\\"+newFileName));  
	            byte bt[] = new byte[500];  
	            while(fis.read(bt)>0){  
	                fos.write(bt);  
	            }  
	            fis.close();  
	            fos.flush();  
	            fos.close();  
	            message = "文件上传成功！";  
	        }  
	        response.getWriter().write("{msg:\""+message+"\",newname:\""+newFileName+"\"}");  
	        response.getWriter().flush();  
	        response.getWriter().close();  
				
	}
	
	/**
	 * 上传商品信息
	 * @throws Exception
	 */
	public void saveProduceData() throws Exception {
		String produceName = commonUtil.decodeUrl(request.getParameter("produceName"));
		String produceDesc = commonUtil.decodeUrl(request.getParameter("produceDesc"));
		String producePrice = commonUtil.decodeUrl(request.getParameter("producePrice"));
		String remitPrice = commonUtil.decodeUrl(request.getParameter("produceCoupon"));
		String finalPrice = commonUtil.decodeUrl(request.getParameter("producePriceNew"));
		Object objName=request.getSession().getAttribute("userName");
		String userName = (String) (objName==null?"":objName);
		String producePicURL = commonUtil.decodeUrl(request.getParameter("picUrl"));
		UserInfo userinfo = (UserInfo) request.getSession().getAttribute("userinfo");
		ProduceInfo produceInfo = new ProduceInfo();
		produceInfo.setUserId(userinfo.getUserId());
		produceInfo.setUserName(userName);
		produceInfo.setProduceName(produceName);
		produceInfo.setProduceDesc(produceDesc);
		produceInfo.setProducePrice(new BigDecimal("".equals(producePrice)?"0":producePrice));
		produceInfo.setRemitPrice(new BigDecimal("".equals(remitPrice)?"0":remitPrice));
		produceInfo.setFinalPrice(new BigDecimal("".equals(finalPrice)?"0":finalPrice));
		produceInfo.setProducePic(producePicURL);
		ProduceServiceImpl produceServiceImpl = ((ProduceServiceImpl) getApplicationContext().getBean("produceServiceImpl"));
		boolean flag = produceServiceImpl.saveProduceData(produceInfo);
		JsonUtil jsUtil = new JsonUtil();
		JSONArray jsAry=new JSONArray();
//		if(flag)
			jsUtil.returnJson(response, "0","保存成功!", jsAry);//保存成功
//		else
			jsUtil.returnJson(response, "1","保存失败!", jsAry);//保存失败
	}
	
	/**
	 * 删除商品信息
	 * @throws Exception
	 */
	public void deleteProduceData() throws Exception {
		String produceId = commonUtil.decodeUrl(request.getParameter("produceId"));
		ProduceServiceImpl produceServiceImpl = ((ProduceServiceImpl) getApplicationContext().getBean("produceServiceImpl"));
		boolean flag = produceServiceImpl.deleteProduceData(produceId);
		JsonUtil jsUtil = new JsonUtil();
		JSONArray jsAry=new JSONArray();
//		if(flag)
			jsUtil.returnJson(response, "0","删除成功!", jsAry);//保存成功
//		else
			jsUtil.returnJson(response, "1","删除失败!", jsAry);//保存失败
	}
	
	/**
	 * 修改商品信息
	 * @throws Exception
	 */
	public void updateProduceData() throws Exception {
		String produceName = commonUtil.decodeUrl(request.getParameter("produceNameUpd"));
		String produceDesc = commonUtil.decodeUrl(request.getParameter("produceDescUpd"));
		String producePrice = commonUtil.decodeUrl(request.getParameter("producePriceUpd"));
		String remitPrice = commonUtil.decodeUrl(request.getParameter("produceCoupon"));
		String finalPrice = commonUtil.decodeUrl(request.getParameter("producePriceNew"));
		Object objName=request.getSession().getAttribute("userName");
		String userName = (String) (objName==null?"":objName);
		String producePicURL = commonUtil.decodeUrl(request.getParameter("picUrlUpd"));
		UserInfo userinfo = (UserInfo) request.getSession().getAttribute("userinfo");
		String produceId = commonUtil.decodeUrl(request.getParameter("produceId"));
		ProduceServiceImpl produceServiceImpl = ((ProduceServiceImpl) getApplicationContext().getBean("produceServiceImpl"));
		ProduceInfo produceInfo = produceServiceImpl.selectProduceById(produceId);
		produceInfo.setUserId(userinfo.getUserId());
		produceInfo.setUserName(userName);
		produceInfo.setProduceName(produceName);
		produceInfo.setProduceDesc(produceDesc);
		produceInfo.setProducePrice(new BigDecimal("".equals(producePrice)?"0":producePrice));
		produceInfo.setRemitPrice(new BigDecimal("".equals(remitPrice)?"0":remitPrice));
		produceInfo.setFinalPrice(new BigDecimal("".equals(finalPrice)?"0":finalPrice));
		produceInfo.setProducePic(producePicURL);
		boolean flag = produceServiceImpl.updateProduceData(produceInfo);
		JsonUtil jsUtil = new JsonUtil();
		JSONArray jsAry=new JSONArray();
//		if(flag)
			jsUtil.returnJson(response, "0","更新成功!", jsAry);//保存成功
//		else
			jsUtil.returnJson(response, "1","更新失败!", jsAry);//保存失败
	}
	
	/**
	 * 获取商家商品信息
	 * @throws Exception
	 */
	public void getProduceInfoByUser() throws Exception {
		UserInfo userinfo = (UserInfo) request.getSession().getAttribute("userinfo");
		ProduceServiceImpl produceServiceImpl = ((ProduceServiceImpl) getApplicationContext().getBean("produceServiceImpl"));
		List<ProduceInfo> list = produceServiceImpl.selectProduceByUserId(userinfo.getUserId());
		JsonUtil jsUtil = new JsonUtil();
		JSONArray jsAry=new JSONArray();
		if(list!=null){
			for(ProduceInfo pdinfo : list){
				jsAry.add(pdinfo);
			}
			getLog(this.getClass()).info(this.getClass().getName()+"=====================查询用户【"+userinfo.getUserName()+"】的商品信息成功!");
			jsUtil.returnJson(response, "0","查询商品信息成功!", jsAry);//保存成功
		}else{
			getLog(this.getClass()).error(this.getClass().getName()+"=====================查询用户【"+userinfo.getUserName()+"】的商品信息失败!");
			jsUtil.returnJson(response, "1","查询失败!", jsAry);//保存成功
		}
	}
	
	/**
	 * 获取商家商品信息byProduceId
	 * @throws Exception
	 */
	public void getProduceInfoById() throws Exception {
		String produceId = commonUtil.decodeUrl(request.getParameter("produceId"));
		ProduceServiceImpl produceServiceImpl = ((ProduceServiceImpl) getApplicationContext().getBean("produceServiceImpl"));
		ProduceInfo produceinfo = produceServiceImpl.selectProduceById(produceId);
		JsonUtil jsUtil = new JsonUtil();
		JSONArray jsAry=new JSONArray();
		if(produceinfo!=null){
			jsAry.add(produceinfo);
			getLog(this.getClass()).info(this.getClass().getName()+"=====================查询商品信息成功!");
			jsUtil.returnJson(response, "0","查询商品信息成功!", jsAry);//保存成功
		}else{
			getLog(this.getClass()).error(this.getClass().getName()+"=====================查询商品信息失败!");
			jsUtil.returnJson(response, "1","查询失败!", jsAry);//保存成功
		}
	}
	
	public File getFile() {
			return file;
	}

	public void setFile(File file) {
		this.file = file;
	}

	public String getFileFileContentType() {
		return fileFileContentType;
	}

	public void setFileFileContentType(String fileFileContentType) {
		this.fileFileContentType = fileFileContentType;
	}

	public String getFileFileName() {
		return fileFileName;
	}

	public void setFileFileName(String fileFileName) {
		this.fileFileName = fileFileName;
	}

}
