package com.web.action.login;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Date;
import java.util.List;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.servlet.ServletException;

import net.sf.json.JSONArray;

import com.mybatis.entity.ttdj.UserInfo;
import com.service.login.LoginServiceImpl;
import com.web.action.base.BaseAction;
import com.web.action.base.JsonUtil;

public class LoginAction extends BaseAction {

	

	/**
	 *  用户登陆
	 * @throws Exception
	 */
	public void userLogin() throws Exception{
		 String userName = commonUtil.decodeUrl(request.getParameter("userName"));
		 String password = commonUtil.decodeUrl(request.getParameter("password"));
		 String checkNumber = commonUtil.decodeUrl(request.getParameter("checkNumber"));
		 LoginServiceImpl loginServiceImpl = ((LoginServiceImpl) getApplicationContext().getBean("loginServiceImpl"));
		 String strSysRand = (String) request.getSession().getAttribute("ttdjrand");
		 JsonUtil jsUtil = new JsonUtil();
		 JSONArray jsAry=new JSONArray();
		 if(!checkNumber.equals(strSysRand)){//验证码不一致
			 jsUtil.returnJson(response, "1","验证码不正确!", jsAry);//验证失败
		 }else{//验证码正确
			 List<UserInfo> list = loginServiceImpl.getDataByUserinfo(userName,password);
			 if(list.size()==1){
				 //有效用户 
				 UserInfo userinfo = new UserInfo();
				 userinfo = list.get(0);
				 userinfo.setLastLoginDate(new Date());
				 userinfo.setLastLoginIp(commonUtil.getIpAddr(request));//获取客户端ip地址
				 boolean flag = loginServiceImpl.updateUserInfo(userinfo);
				 if(!flag){
					 getLog(this.getClass()).error(this.getClass().getName()+"====================error: update userinfo failed！");
				 }
				 request.getSession().setAttribute("userName", userName);
				 request.getSession().setAttribute("userLoginTime", userinfo.getLastLoginDate());
				 request.getSession().setAttribute("userType", userinfo.getUserType());
				 request.getSession().setAttribute("userIp", userinfo.getLastLoginIp());
				 jsUtil.returnJson(response, "0","登陆成功!", jsAry);//验证失败
			 }else{
				 //用户不存在
				 jsUtil.returnJson(response, "1","您输入的用户名或密码不正确!", jsAry);//验证失败
			 }
		 }
	}

	/**
	 * 获取验证码图片
	 * @throws ServletException
	 * @throws IOException
	 */
	public void genCheckImg() throws ServletException, IOException {
		try {
			response.setHeader("Pragma", "No-cache");
			response.setHeader("Cache-Control", "no-cache");
			response.setDateHeader("Expires", 0);
			int width = 60, height = 20;
			BufferedImage image = new BufferedImage(width, height,
					BufferedImage.TYPE_INT_RGB);
			OutputStream os = response.getOutputStream();
			Graphics g = image.getGraphics();
			Random random = new Random();
			g.setColor(getRandColor(200, 250));
			g.fillRect(0, 0, width, height);
			g.setFont(new Font("Arial", Font.PLAIN, 18));
			g.setColor(getRandColor(160, 200));
			for (int i = 0; i < 155; i++) {
				int x = random.nextInt(width);
				int y = random.nextInt(height);
				int xl = random.nextInt(12);
				int yl = random.nextInt(12);
				g.drawLine(x, y, x + xl, y + yl);
			}
			String sRand = "";
			sRand = commonUtil.genChkNumber(g,sRand,4);
			request.getSession().setAttribute("ttdjrand", sRand);
			g.dispose();
			ImageIO.write(image, "JPEG", os);
			os.flush();
			os.close();
			os = null;
			response.flushBuffer();
			// out.clear();
			// out = pageContext.pushBody();
		} catch (IllegalStateException e) {
			e.printStackTrace();
		}
	}

	public Color getRandColor(int fc, int bc) {
		Random random = new Random();
		if (fc > 255)
			fc = 255;
		if (bc > 255)
			bc = 255;
		int r = fc + random.nextInt(bc - fc);
		int g = fc + random.nextInt(bc - fc);
		int b = fc + random.nextInt(bc - fc);
		return new Color(r, g, b);
	}
}
