<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mybatis.dao.bbs.JbMessageMapper" >
  <resultMap id="BaseResultMap" type="com.mybatis.entity.bbs.JbMessage" >
    <id column="msg_id" property="msgId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="sender" property="sender" jdbcType="INTEGER" />
    <result column="receiver" property="receiver" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="is_sys" property="isSys" jdbcType="BIT" />
    <result column="msg_type" property="msgType" jdbcType="INTEGER" />
    <result column="is_read" property="isRead" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.mybatis.entity.bbs.JbMessage" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    msg_id, user_id, sender, receiver, create_time, is_sys, msg_type, is_read
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.mybatis.entity.bbs.JbMessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jb_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mybatis.entity.bbs.JbMessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jb_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jb_message
    where msg_id = #{msgId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jb_message
    where msg_id = #{msgId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mybatis.entity.bbs.JbMessageExample" >
    delete from jb_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mybatis.entity.bbs.JbMessage" >
    insert into jb_message (msg_id, user_id, sender, 
      receiver, create_time, is_sys, 
      msg_type, is_read, content
      )
    values (#{msgId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{sender,jdbcType=INTEGER}, 
      #{receiver,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{isSys,jdbcType=BIT}, 
      #{msgType,jdbcType=INTEGER}, #{isRead,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mybatis.entity.bbs.JbMessage" >
    insert into jb_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        msg_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="sender != null" >
        sender,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isSys != null" >
        is_sys,
      </if>
      <if test="msgType != null" >
        msg_type,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        #{msgId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="sender != null" >
        #{sender,jdbcType=INTEGER},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSys != null" >
        #{isSys,jdbcType=BIT},
      </if>
      <if test="msgType != null" >
        #{msgType,jdbcType=INTEGER},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=BIT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mybatis.entity.bbs.JbMessageExample" resultType="java.lang.Integer" >
    select count(*) from jb_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jb_message
    <set >
      <if test="record.msgId != null" >
        msg_id = #{record.msgId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.sender != null" >
        sender = #{record.sender,jdbcType=INTEGER},
      </if>
      <if test="record.receiver != null" >
        receiver = #{record.receiver,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isSys != null" >
        is_sys = #{record.isSys,jdbcType=BIT},
      </if>
      <if test="record.msgType != null" >
        msg_type = #{record.msgType,jdbcType=INTEGER},
      </if>
      <if test="record.isRead != null" >
        is_read = #{record.isRead,jdbcType=BIT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update jb_message
    set msg_id = #{record.msgId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      sender = #{record.sender,jdbcType=INTEGER},
      receiver = #{record.receiver,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_sys = #{record.isSys,jdbcType=BIT},
      msg_type = #{record.msgType,jdbcType=INTEGER},
      is_read = #{record.isRead,jdbcType=BIT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jb_message
    set msg_id = #{record.msgId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      sender = #{record.sender,jdbcType=INTEGER},
      receiver = #{record.receiver,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_sys = #{record.isSys,jdbcType=BIT},
      msg_type = #{record.msgType,jdbcType=INTEGER},
      is_read = #{record.isRead,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mybatis.entity.bbs.JbMessage" >
    update jb_message
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="sender != null" >
        sender = #{sender,jdbcType=INTEGER},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSys != null" >
        is_sys = #{isSys,jdbcType=BIT},
      </if>
      <if test="msgType != null" >
        msg_type = #{msgType,jdbcType=INTEGER},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=BIT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mybatis.entity.bbs.JbMessage" >
    update jb_message
    set user_id = #{userId,jdbcType=INTEGER},
      sender = #{sender,jdbcType=INTEGER},
      receiver = #{receiver,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_sys = #{isSys,jdbcType=BIT},
      msg_type = #{msgType,jdbcType=INTEGER},
      is_read = #{isRead,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mybatis.entity.bbs.JbMessage" >
    update jb_message
    set user_id = #{userId,jdbcType=INTEGER},
      sender = #{sender,jdbcType=INTEGER},
      receiver = #{receiver,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_sys = #{isSys,jdbcType=BIT},
      msg_type = #{msgType,jdbcType=INTEGER},
      is_read = #{isRead,jdbcType=BIT}
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
</mapper>